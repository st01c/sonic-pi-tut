# LISTS
# in square brackets…
# adding a second square bracket with a single no indicates position within the list!
/
play [:E4, :G4, :B4], amp: 0.9
/

/
use_synth :dull_bell
with_fx :wobble do
  play [52, 55, 59]
end
/

/
play chord(:E4, :minor)
/

# ARPEGGIOS!
# (default 1 sleep between notes)

/
play_pattern chord(:E4, :m7)
/

# timed arpeggios

/
play_pattern_timed chord(:E4, :m7), 0.125
/

# pass a LIST of times – which it will circle through
# great to experiment with

/
# ++
loop do
  play_pattern_timed chord([:D4,:E4,:F4,:E4,:E4].choose, :m7), [0.125, 0.25, 0.5]
end
/


/
# ++
loop do
  play_pattern_timed chord([:D4,:E4,:F4,:E4,:E4].choose, :m13), [0.125, 0.25, 0.5]
end
/


# SCALES

/
play_pattern_timed scale(:C4, :major_pentatonic, num_octaves: 3), 0.125, release: 0.15
/

# pick single note from chord

/
# ++
loop do
  play choose(chord(:E4, :m7))
  sleep 0.25
end
/

/
# ++
use_synth :mod_pulse
loop do
  play choose(chord(:E3, :minor)), release: 0.3, cutoff: rrand(60, 120)
  sleep 0.25
end
/

# LIVE
# simply use named threads so that no additional 'layer' will be added when re-running!
# [but live_loop is simpler…]
/
define :my_loop do
  #use_synth :dull_bell
  use_synth :tb303
  with_fx :reverb, room: 0.8 do
    sample :drum_bass_hard, rate: rrand(0.5, 2)
    #play 58
    #play chord(:C4, :minor), release: 0.8
    #play chord(:C4, :minor).choose, release: 0.8
    play chord(:C4, :minor).choose, release: 0.2, cutoff: rrand(60, 130)
    sleep 0.25
    #sleep [0.25, 0.5].choose
  end
end

in_thread(name: :looper) do
  loop do
    my_loop
  end
end
/


# live loop!
/
live_loop :foo do
  sample :loop_garzul, rate: 1
  use_synth :prophet
  play :e3, release: 8, cutoff: rrand(70,130)
  sleep 8
end
/


# syncing live loops

live_loop :foo do
  play :e4, release: 0.5
  sleep 0.4
end

live_loop :bar do
  #sync :foo
  sample :bd_haus
  sleep 1
end
